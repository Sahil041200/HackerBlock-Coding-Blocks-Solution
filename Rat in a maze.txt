#include <iostream>
#include <vector>
using namespace std;

const int MAX_N = 1001;
char grid[MAX_N][MAX_N];
int path[MAX_N][MAX_N];
int N, M;

bool isSafe(int row, int col) {
    return (row >= 1 && row <= N && col >= 1 && col <= M && grid[row][col] == 'O');
}

bool findRightmostPath(int row, int col) {
    // If the rat has reached the destination, return true
    if (row == N && col == M) {
        path[row][col] = 1;
        return true;
    }

    if (isSafe(row, col)) {
        path[row][col] = 1;

        // Try moving right
        if (findRightmostPath(row, col + 1)) {
            return true;
        }

        // Try moving down
        if (findRightmostPath(row + 1, col)) {
            return true;
        }

        // If no valid move from this cell, backtrack
        path[row][col] = 0;
    }

    return false;
}

int main() {
    cin >> N >> M;

    for (int i = 1; i <= N; i++) {
        for (int j = 1; j <= M; j++) {
            cin >> grid[i][j];
            path[i][j] = 0;
        }
    }

    if (findRightmostPath(1, 1)) {
        // Print the rightmost path
        for (int i = 1; i <= N; i++) {
            for (int j = 1; j <= M; j++) {
                cout << path[i][j] << " ";
            }
            cout << endl;
        }
    } else {
        cout << "-1" << endl;
    }

    return 0;
}
