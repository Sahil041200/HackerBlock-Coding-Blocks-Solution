#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

void findTripletsWithSum(int arr[], int N, int target) {
    sort(arr, arr + N);

    for (int i = 0; i < N - 2; ++i) {
        if (i > 0 && arr[i] == arr[i - 1]) {
            continue; // Skip duplicates
        }

        int left = i + 1;
        int right = N - 1;

        while (left < right) {
            int currentSum = arr[i] + arr[left] + arr[right];

            if (currentSum == target) {
                cout << arr[i] << ", " << arr[left] << " and " << arr[right] << endl;

                // Skip duplicates
                while (left < right && arr[left] == arr[left + 1]) {
                    ++left;
                }
                while (left < right && arr[right] == arr[right - 1]) {
                    --right;
                }

                ++left;
                --right;
            } else if (currentSum < target) {
                ++left;
            } else {
                --right;
            }
        }
    }
}

int main() {
    int N;
    cin >> N;

    int arr[1000]; // Assuming the maximum array size is 1000 as per the constraints
    for (int i = 0; i < N; ++i) {
        cin >> arr[i];
    }

    int target;
    cin >> target;

    findTripletsWithSum(arr, N, target);

    return 0;
}
