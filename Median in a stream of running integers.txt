#include <iostream>
#include <queue>
#include <vector>
using namespace std;

void printMedians(const vector<int>& arr) {
    priority_queue<int> maxHeap; // Max heap for elements less than median
    priority_queue<int, vector<int>, greater<int>> minHeap; // Min heap for elements greater than median

    maxHeap.push(arr[0]);
    cout << arr[0] << " ";

    for (int i = 1; i < arr.size(); ++i) {
        if (maxHeap.size() > minHeap.size()) {
            if (arr[i] < maxHeap.top()) {
                minHeap.push(maxHeap.top());
                maxHeap.pop();
                maxHeap.push(arr[i]);
            } else {
                minHeap.push(arr[i]);
            }
            cout << (maxHeap.top() + minHeap.top()) / 2 << " ";
        } else if (maxHeap.size() == minHeap.size()) {
            if (arr[i] < maxHeap.top()) {
                maxHeap.push(arr[i]);
                cout << maxHeap.top() << " ";
            } else {
                minHeap.push(arr[i]);
                cout << minHeap.top() << " ";
            }
        } else {
            if (arr[i] > minHeap.top()) {
                maxHeap.push(minHeap.top());
                minHeap.pop();
                minHeap.push(arr[i]);
            } else {
                maxHeap.push(arr[i]);
            }
            cout << (maxHeap.top() + minHeap.top()) / 2 << " ";
        }
    }
}

int main() {
    int t;
    cin >> t;

    while (t--) {
        int n;
        cin >> n;

        vector<int> arr(n);
        for (int i = 0; i < n; ++i) {
            cin >> arr[i];
        }

        printMedians(arr);
        cout << endl;
    }

    return 0;
}
