#include <iostream>
#include <stack>
#include <vector>

using namespace std;

vector<int> calculateStockSpan(vector<int> prices) {
    int n = prices.size();
    vector<int> span(n);
    stack<int> s;

    // The first day always has a span of 1.
    span[0] = 1;
    s.push(0);

    for (int i = 1; i < n; i++) {
        while (!s.empty() && prices[i] >= prices[s.top()]) {
            s.pop();
        }

        span[i] = (s.empty() ? i + 1 : i - s.top());
        s.push(i);
    }

    span.push_back(-1);  // Adding -1 as the END marker.

    return span;
}

int main() {
    int n;
    cin >> n;
    vector<int> prices(n);

    for (int i = 0; i < n; i++) {
        cin >> prices[i];
    }

    vector<int> span = calculateStockSpan(prices);

    for (int i = 0; i < n; i++) {
        cout << span[i] << " ";
    }

    cout << "END" << endl;

    return 0;
}
