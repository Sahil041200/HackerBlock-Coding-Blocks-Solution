#include <iostream>
#include <stack>

using namespace std;

class QueueWithTwoStacks {
public:
    void enqueue(int x) {
        stack1.push(x);
    }

    int dequeue() {
        if (stack2.empty()) {
            while (!stack1.empty()) {
                stack2.push(stack1.top());
                stack1.pop();
            }
        }

        if (stack2.empty()) {
            // The queue is empty
            return -1;
        }

        int frontElement = stack2.top();
        stack2.pop();
        return frontElement;
    }

private:
    stack<int> stack1;  // Used for enqueue operation
    stack<int> stack2;  // Used for dequeue operation
};

int main() {
    int n;
    cin >> n;

    QueueWithTwoStacks queue;

    for (int i = 0; i < n; i++) {
        queue.enqueue(i);
    }

    for (int i = 0; i < n; i++) {
        int frontElement = queue.dequeue();
        cout << frontElement << " ";
    }

    cout << endl;

    return 0;
}
