#include <iostream>
#include <stack>

using namespace std;

class QueueWithTwoStacks {
private:
    stack<int> stack1;
    stack<int> stack2;

public:
    void enqueue(int x) {
        stack1.push(x);
    }

    int dequeue() {
        if (stack2.empty()) {
            if (stack1.empty()) {
                cout << "Queue is empty." << endl;
                return -1; // Handle underflow condition
            }
            while (!stack1.empty()) {
                stack2.push(stack1.top());
                stack1.pop();
            }
        }

        int front = stack2.top();
        stack2.pop();
        return front;
    }
};

int main() {
    int N;
    cin >> N;

    QueueWithTwoStacks queue;

    for (int i = 0; i < N; i++) {
        queue.enqueue(i);
    }

    for (int i = 0; i < N; i++) {
        cout << queue.dequeue() << " ";
    }

    cout << endl;

    return 0;
}
