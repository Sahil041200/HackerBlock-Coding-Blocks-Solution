#include<iostream>
#include<climits>
#include<algorithm>
using namespace std;
long long dp[105][105];

long long sum(long long arr[], long long s, long long e) {
	long long sum1 = 0;
	for (long long i = s; i <= e; i++) {
		sum1 += arr[i] % 100;
		sum1 = sum1 % 100;
	}
	
	return sum1;
}

long long fun(long long arr[], long long i, long long n) {
	if (i >= n)return 0;
	if (dp[i][n] != -1)return dp[i][n];
	dp[i][n] = INT_MAX;
	for (long long j = i; j < n; j++) {
		long long s = ((sum(arr, i, j) * sum(arr, j + 1, n)) + fun(arr, i, j) + fun(arr, j + 1, n));
		dp[i][n] = min(dp[i][n], s);
	}
	return dp[i][n];
}

int main() {
	long long n;
	cin >> n;
	long long *arr=new long long[n];
	for (long long i = 0; i < n; i++) {
		cin >> arr[i];
	}
	for (int i = 0; i < 105; i++) {
		for (int j = 0; j < 105; j++) {
			dp[i][j] = -1;
		}
	}
	long long x = fun(arr, 0, n - 1);
	cout << x << endl;
	return 0;
}
