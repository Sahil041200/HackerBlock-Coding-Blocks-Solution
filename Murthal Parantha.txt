#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

bool isPossible(vector<int>& cooks, int p, int mid) {
    int paranthas = 0;
    for (int cook : cooks) {
        int time = 0;
        int i = 1;
        while (time + (i * cook) <= mid) {
            time += (i * cook);
            i++;
            paranthas++;
            if (paranthas >= p) {
                return true;
            }
        }
    }
    return false;
}

int main() {
    int p; 
    cin >> p;

    int l; 
    cin >> l;

    vector<int> cooks(l);

    for (int i = 0; i < l; i++) {
        cin >> cooks[i];
    }

    int low = 0, high = 1e9;
    int ans = high;

    while (low <= high) {
        int mid = (low + high) / 2;

        if (isPossible(cooks, p, mid)) {
            ans = min(ans, mid);
            high = mid - 1;
        } else {
            low = mid + 1;
        }
    }

    cout << ans << endl;

    return 0;
}
