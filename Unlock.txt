#include <iostream>
#include <vector>
#include <unordered_map>
using namespace std;

int main() {
    int n, k;
    cin >> n >> k;

    vector<int> permutation(n);
    unordered_map<int, int> index;

    // Input the permutation and store the index of each element
    for (int i = 0; i < n; ++i) {
        cin >> permutation[i];
        index[permutation[i]] = i;
    }

    // Initialize a variable to track the number of swaps made
    int swaps = 0;

    for (int i = 0; i < n && swaps < k; ++i) {
        if (permutation[i] != n - i) {
            // Find the index of the current largest element
            int largestIndex = index[n - i];

            // Swap the current element with the largest element
            swap(permutation[i], permutation[largestIndex]);

            // Update the index of the swapped elements
            index[permutation[i]] = i;
            index[permutation[largestIndex]] = largestIndex;

            // Increment the swaps made
            swaps++;
        }
    }

    // Print the final permutation
    for (int i = 0; i < n; ++i) {
        cout << permutation[i] << " ";
    }
    cout << endl;

    return 0;
}
