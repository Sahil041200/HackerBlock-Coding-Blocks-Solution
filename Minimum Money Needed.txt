#include <iostream>
#include <vector>
#include <climits>
using namespace std;

int minCostOranges(int N, int W, vector<int>& price) {
    vector<int> dp(W + 1, INT_MAX); // Initializing the DP array

    dp[0] = 0; // Base case: 0 kg oranges cost 0

    for (int i = 1; i <= W; i++) {
        for (int j = 1; j <= i; j++) {
            if (price[j] != -1 && dp[i - j] != INT_MAX) {
                dp[i] = min(dp[i], dp[i - j] + price[j]);
            }
        }
    }

    return (dp[W] == INT_MAX) ? -1 : dp[W];
}

int main() {
    int N, W;
    cin >> N >> W;

    vector<int> price(W + 1); // Array to store prices of kg packets

    for (int i = 1; i <= W; i++) {
        cin >> price[i];
    }

    int result = minCostOranges(N, W, price);
    cout << result << endl;

    return 0;
}

