#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int robHelper(const vector<int>& nums, int start, int end) {
    int prevMax = 0;
    int currMax = 0;

    for (int i = start; i <= end; ++i) {
        int temp = currMax;
        currMax = max(currMax, prevMax + nums[i]);
        prevMax = temp;
    }

    return currMax;
}

int rob(vector<int>& nums) {
    int n = nums.size();

    if (n == 1) {
        return nums[0];
    }

    // Rob houses 0 to n-2
    int max1 = robHelper(nums, 0, n - 2);

    // Rob houses 1 to n-1
    int max2 = robHelper(nums, 1, n - 1);

    return max(max1, max2);
}

int main() {
    int N;
    cin >> N;

    vector<int> nums(N);
    for (int i = 0; i < N; ++i) {
        cin >> nums[i];
    }

    int maxAmount = rob(nums);

    cout << maxAmount << endl;

    return 0;
}
