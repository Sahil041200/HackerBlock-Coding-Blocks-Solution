#include <iostream>
#include <unordered_map>
using namespace std;

unordered_map<int, long long> memo;

long long getMaxGold(int n) {
    if (n <= 0) {
        return 0; // Base case: if the coin value is 0 or negative, return 0 gold
    }

    if (memo.find(n) != memo.end()) {
        return memo[n]; // If value exists in memoization map, return from memo
    }

    long long maxGold = max((long long)n, getMaxGold(n / 2) + getMaxGold(n / 3) + getMaxGold(n / 4));
    memo[n] = maxGold; // Store the calculated result in memoization map
    return maxGold;
}

int main() {
    int n;
    cin >> n;

    long long result = getMaxGold(n);
    cout << result << endl;

    return 0;
}
