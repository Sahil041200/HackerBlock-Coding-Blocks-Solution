#include <iostream>
#include <vector>
#include <climits>

using namespace std;

vector<vector<int>> dp(1001, vector<int>(1001, -1));

int minTrials(int K, int N) {
    if (K == 1) {
        return N;
    }

    if (N == 0 || N == 1) {
        return N;
    }

    if (dp[K][N] != -1) {
        return dp[K][N];
    }

    int left = 1, right = N;
    int ans = INT_MAX;

    while (left <= right) {
        int mid = left + (right - left) / 2;

        int breakTrial = minTrials(K - 1, mid - 1);
        int surviveTrial = minTrials(K, N - mid);

        int worstCase = 1 + max(breakTrial, surviveTrial);

        if (breakTrial > surviveTrial) {
            right = mid - 1;
        } else {
            left = mid + 1;
        }

        ans = min(ans, worstCase);
    }

    dp[K][N] = ans;
    return ans;
}

int main() {
    int T;
    cin >> T;

    while (T--) {
        int K, N;
        cin >> K >> N;

        int result = minTrials(K, N);

        cout << result << endl;
    }

    return 0;
}
