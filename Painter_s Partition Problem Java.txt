#include <iostream>
#include <vector>
#include <algorithm> 
#include <climits>    

using namespace std;

bool isPossible(vector<int>& boards, int k, int maxTime) {
    int painters = 1;
    int currentBoard = 0;
    
    for (int board : boards) {
        if (currentBoard + board > maxTime) {
            painters++;
            currentBoard = board;
            if (painters > k) {
                return false;
            }
        } else {
            currentBoard += board;
        }
    }
    
    return true;
}

int minPaintTime(int k, int n, vector<int>& boards) {
    int low = *max_element(boards.begin(), boards.end());
    int high = INT_MAX;
    
    while (low < high) {
        int mid = low + (high - low) / 2;
        if (isPossible(boards, k, mid)) {
            high = mid;
        } else {
            low = mid + 1;
        }
    }
    
    return low;
}

int main() {
    int k, n;
    cin >> k >> n;
    vector<int> boards(n);
    
    for (int i = 0; i < n; i++) {
        cin >> boards[i];
    }
    
    int result = minPaintTime(k, n, boards);
    cout << result << endl;
    
    return 0;
}
