#include <iostream>
#include <stack>
#include <vector>

using namespace std;

string removeDuplicateLetters(string s) {
    vector<int> count(26, 0); // Count the frequency of each character
    vector<bool> used(26, false); // Track if a character is already used in the result
    stack<char> stk; // Stack to maintain the result

    for (char c : s)
        count[c - 'a']++;

    for (char c : s) {
        count[c - 'a']--; // Decrement the count of the current character

        if (used[c - 'a']) // If character is already used, skip it
            continue;

        // Pop characters from the stack if they are greater than the current character
        while (!stk.empty() && stk.top() > c && count[stk.top() - 'a'] > 0) {
            used[stk.top() - 'a'] = false;
            stk.pop();
        }

        stk.push(c);
        used[c - 'a'] = true;
    }

    string result = "";
    while (!stk.empty()) {
        result = stk.top() + result;
        stk.pop();
    }

    return result;
}

int main() {
    string s;
    cin >> s;
    string result = removeDuplicateLetters(s);
    cout << result << endl;
    return 0;
}
