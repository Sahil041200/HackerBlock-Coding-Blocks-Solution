#include<bits/stdc++.h>
using namespace std;

void printSubsets(vector<int> &arr, int i, int target, vector<int> &ds) {
    if(i==arr.size()) {
        if(target == 0) {
            for(auto el: ds) {
                cout << el << " ";
            }
            cout << "  ";
        }
        return;
    }
    if(arr[i] <= target) {
        ds.push_back(arr[i]);
        printSubsets(arr, i+1, target-arr[i], ds);
        ds.pop_back();
    }
    printSubsets(arr, i+1, target, ds);
}

int countSubsets(vector<int> &arr, int i, int target) {
    if(i==arr.size()) {
        if(target == 0) {
            return 1;
        } else {
            return 0;
        }
    }
    int count = 0;
    if(arr[i] <= target) {
        count += countSubsets(arr, i+1, target-arr[i]);
    }
    count += countSubsets(arr, i+1, target);
    return count;
}

int main() {
    int N;
    cin >> N;
    vector<int> arr(N);
    for(int i=0; i<N; i++) {
        cin >> arr[i];
    }
    int target;
    cin >> target;
    vector<int> ds;
    printSubsets(arr, 0, target, ds);
    cout << endl;
    cout << countSubsets(arr, 0, target) << endl;
    return 0;
}
